version: '3.8'

services:
  frontend:
    build: ./frontend
    volumes:
      - shared-data:/data
    networks:
      - app-network
    ports:
      - "3000:3000"
  fastapi:
    build: ./chat-backend
    ports:
      - "8000:8000"
    volumes:
      - shared-data:/data
    networks:
      - app-network
  
  kafka-consumer:
    build: ./kafka_consumer
    volumes:
      - shared-data:/data
    networks:
      - app-network
    depends_on:
      - kafka
    

  db:
    image: postgres:13
    ports:
      - "5431:5431"
    environment:
      POSTGRES_USER: chatapp
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: chatapp
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
  
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-network

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CREATE_TOPICS="chat_messages:1:1"
      
    networks:
      - app-network
    depends_on:
      - zookeeper

  kafka-ui:
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - '8080:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  shared-data:
  postgres_data:
